name: Biome Ecosystem CI

on:
  schedule:
    - cron: "0 5 * * 1,3,5" # monday,wednesday,friday 5AM

  workflow_dispatch:
    inputs:
      # Manual workflow runs
      ref:
        required: false
        type: string
        default: main
      # Workflow run via comments in biomejs/biome PRs
      # See https://github.com/peter-evans/create-or-update-comment?tab=readme-ov-file#action-inputs
      comment-id:
        required: false
        type: string
      issue-number:
        required: false
        type: string

jobs:
  build-biome:
    name: Build Biome (${{ inputs.ref }})
    timeout-minutes: 45
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Biome
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: biomejs/biome
          ref: ${{ inputs.ref }}

      - name: Install toolchain
        uses: moonrepo/setup-rust@e013866c4215f77c925f42f60257dec7dd18836e # v1.2.1
        with:
          cache-target: release
          cache-base: main

      - name: Build Biome binary
        env:
          RUSTFLAGS: "-C debug-assertions=true"
        run: cargo build -p biome_cli --release

      - name: Upload Biome binary
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          if-no-files-found: error
          name: biome
          path: ./target/release/biome

  test-ecosystem:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Add projects to test here
          - repository: preactjs/preact
            ref: main
            path: preact
            command: ./biome check

    name: Test ${{ matrix.repository }}
    needs: build-biome
    timeout-minutes: 30
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout ${{ matrix.repository }}
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: ${{ matrix.repository }}
          ref: ${{ matrix.ref }}
          path: ${{ matrix.path }}

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: biome
          path: ${{ matrix.path }}

      - run: chmod +x ./biome
        working-directory: ${{ matrix.path }}

      - name: Run command
        working-directory: ${{ matrix.path }}
        run: ${{ matrix.command }}

reply:
    name: Reply
    if: ${{ inputs.issue-number && inputs.comment-id }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4
        with:
          token: ${{ secrets.BIOME_PR_PAT }}
          repository: biomejs/biome
          issue-number: ${{ inputs.issue-number }}
          comment-id: ${{ inputs.comment-id }}
          reactions: eyes

comment:
    needs: test-ecosystem
    if: ${{ inputs.issue-number && inputs.comment-id }}
    runs-on: ubuntu-latest
    name: Reply Comment
    permissions:
      pull-requests: write
    steps:
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: script
        if: ${{ inputs.issue-number }}
        with:
          result-encoding: string
          # Script from https://github.com/oxc-project/oxlint-ecosystem-ci/blob/main/.github/workflows/ecosystem-ci.yml
          script: |
            const {
              data: { jobs },
            } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
              per_page: 100,
            });
            let result = jobs
              .filter((job) => job.name.startsWith("Test "))
              .map((job) => {
                const suite = job.name.slice(5);
                return { suite, conclusion: job.conclusion, link: job.html_url };
              });
            const url = `${context.serverUrl}//${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const urlLink = `[Open](${url})`;
            const conclusionEmoji = {
              success: ":white_check_mark:",
              failure: ":x:",
              cancelled: ":stop_button:",
            };
            const body = `
            ## [Oxlint Ecosystem CI](${urlLink})
            | suite | result |
            |-------|--------|
            ${result.map((r) => `| [${r.suite}](${r.link}) | ${conclusionEmoji[r.conclusion]} |`).join("\n")}
            `;
            return body;

      - uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4
        if: ${{ inputs.issue-number && inputs.comment-id }}
        with:
          token: ${{ secrets.BIOME_PR_PAT }}
          repository: biomejs/biome
          issue-number: ${{ inputs.issue-number }}
          comment-id: ${{ inputs.comment-id }}
          body: ${{ steps.script.outputs.result }}
          edit-mode: replace
